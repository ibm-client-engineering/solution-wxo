"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[647],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=s.createContext({}),p=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return s.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return n?s.createElement(h,i(i({ref:t},c),{},{components:n})):s.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<a;p++)i[p]=n[p];return s.createElement.apply(null,i)}return s.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5601:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var s=n(7462),r=(n(7294),n(4137));const a={id:"walkthrough",sidebar_position:1,title:"Walkthrough"},i=void 0,o={unversionedId:"Script Details/walkthrough",id:"Script Details/walkthrough",title:"Walkthrough",description:"Walkthrough of the JC - Watsonx Orchestrate ServiceNow API yaml",source:"@site/docs/3-Script Details/Walkthrogh.md",sourceDirName:"3-Script Details",slug:"/Script Details/walkthrough",permalink:"/solution-wxo/Script Details/walkthrough",draft:!1,editUrl:"https://github.com/ibm-client-engineering/solution-name/tree/main/packages/create-docusaurus/templates/shared/docs/3-Script Details/Walkthrogh.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"walkthrough",sidebar_position:1,title:"Walkthrough"},sidebar:"tutorialSidebar",previous:{title:"Script Details",permalink:"/solution-wxo/category/script-details"},next:{title:"Sample Outputs",permalink:"/solution-wxo/Script Details/outputs"}},l={},p=[{value:"Walkthrough of the JC - Watsonx Orchestrate ServiceNow API yaml",id:"walkthrough-of-the-jc---watsonx-orchestrate-servicenow-api-yaml",level:2},{value:"Headers",id:"headers",level:3},{value:"Server URL",id:"server-url",level:3},{value:"Security",id:"security",level:3},{value:"Paths",id:"paths",level:3},{value:"API Calls",id:"api-calls",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Responses",id:"responses",level:3},{value:"Response Schema",id:"response-schema",level:4},{value:"Composite Skills",id:"composite-skills",level:3},{value:"Schcema Components",id:"schcema-components",level:3},{value:"sysID",id:"sysid",level:4},{value:"getthisTable",id:"getthistable",level:4},{value:"getsingleKB",id:"getsinglekb",level:4},{value:"getKBs",id:"getkbs",level:4},{value:"getTable",id:"gettable",level:4},{value:"editTable",id:"edittable",level:4}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,s.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"walkthrough-of-the-jc---watsonx-orchestrate-servicenow-api-yaml"},"Walkthrough of the JC - Watsonx Orchestrate ServiceNow API yaml"),(0,r.kt)("h3",{id:"headers"},"Headers"),(0,r.kt)("p",null,"Watsonx orchestrate requires x-ibm-application headers for properly importing skills from yaml files. See the Watsonx Orchestrate documentation ",(0,r.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/watson-orchestrate?topic=files-using-x-properties"},"here")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'openapi: 3.0.1\ninfo:\n  title: JC - ServiceNow Table API\n  contact:\n    name: Joe Cosenza\n    email: jcosenz@us.ibm.com\n  x-ibm-application-name: JC - ServiceNow Table API\n  x-ibm-application-id: JC-ServiceNowAPI\n  description: Allows you to perform create, read, update, and delete (CRUD) operations on existing ServiceNow tables\n  version: latest\n  x-ibm-application-icon: <svg width="30" height="30" id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 400 360"><defs><style>.cls-1{fill:#f8b500;}.cls-2{fill:#231815;}</style></defs><title>JRK number</title><path class="cls-1" d="M354.6,295.5H39.4A39.4,39.4,0,0,1,0,256.1V39.4A39.4,39.4,0,0,1,39.4,0H354.6A39.4,39.4,0,0,1,394,39.4V256.1a39.4,39.4,0,0,1-39.4,39.4"/><path class="cls-2" d="M105.85,44.44h45.42V171.75c0,57.37-27.49,77.4-71.72,77.4-10.46,0-24.21-1.8-33.17-4.78l5.08-36.76a74.94,74.94,0,0,0,23.31,3.58c19.12,0,31.08-8.66,31.08-40Z"/><path class="cls-2" d="M337.15,240.18c-8.37,4.19-27.19,8.67-51.7,8.67C215.82,248.85,180,205.52,180,148.14c0-68.74,49-107,110-107,23.6,0,41.53,4.78,49.6,9l-9.26,36.16A98.32,98.32,0,0,0,292,78.81c-36.16,0-64.25,21.81-64.25,66.64,0,40.34,23.9,65.74,64.55,65.74,13.74,0,29-3,37.95-6.57Z"/></svg>\n  x-ibm-skill-type: imported\nexternalDocs:\n  url: https://docs.servicenow.com/?context=CSHelp:REST-Table-API\nservers:\n  - url: https://dev213519.service-now.com/\n')),(0,r.kt)("p",null,"A great resource to ",(0,r.kt)("a",{parentName:"p",href:"https://docs.servicenow.com/?context=CSHelp:REST-Table-API"},"help with the API rules of ServiceNow")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"externalDocs:\n  url: https://docs.servicenow.com/?context=CSHelp:REST-Table-API\n")),(0,r.kt)("h3",{id:"server-url"},"Server URL"),(0,r.kt)("p",null,"This URL needs to be set ",(0,r.kt)("strong",null,"for the instance you are planning on using"),". This is an example instance with its own username/password combination for the REST API user. When you create your own instance, update the URL here."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"servers:\n  - url: https://dev213519.service-now.com/\n")),(0,r.kt)("h3",{id:"security"},"Security"),(0,r.kt)("p",null,"This script usses basic authentication (username/password) combination, unlike the out-of-the-box ServiceNow skills"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"security:\n  - basicAuth: []\n")),(0,r.kt)("p",null,"and under components:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"securitySchemes:\n  basicAuth:\n    type: http\n    scheme: basic\n")),(0,r.kt)("h3",{id:"paths"},"Paths"),(0,r.kt)("p",null,"The paths define the path of the API call. For this walkthrough, we'll use the path that allows us to modify Tasks. The name of the Tasks table in ServiceNow is sc_tasks, defined as the tableName parameter in the script, and hardcoded in the path below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"paths:  \n  /api/now/table/sc_task?sysparm_display_value=true&sysparm_exclude_reference_link=true:\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The querys used in this script 'sysparm_display_value=true and sysparm_exclude_reference_link=true' are in the path. Most swagger validators will not allow this, however Watsonx Orchestrate allows query parameters in the path. These are used to recieve friendly values in our response from ServiceNow.")),(0,r.kt)("h3",{id:"api-calls"},"API Calls"),(0,r.kt)("p",null,'Each skill on Watsonx Orchestrate is done by defining an API call. It is reccomended that you create a specific "get" call per skill (eg: Retrieve all TASKS from Servicenow). Having the user specify the tableName is not a friendly display. In the code below, 2 skills are identified:'),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",null,"get")," API call: JC - Retrieve all Tasks from ServiceNow"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",null,"post")," API call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"get:\n  summary: JC - Retrieve all Tasks from ServiceNow\n  description: Retrieve all Tasks from ServiceNow\n  operationId: retrieveTasks\n  responses:\n    '200':\n      description: Results\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/getTable'\npost:\n  summary: JC - Create a new Task in ServiceNow\n  description: Create a new Task in ServiceNow\n  operationId: createTask\n  requestBody:\n    content:\n      application/json: \n        schema:\n          $ref: '#/components/schemas/editTable'\n")),(0,r.kt)("h3",{id:"request-body"},"Request Body"),(0,r.kt)("p",null,"Request bodies define the content to be sent to Servicenow"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"requestBody:\n  content:\n    application/json:\n      schema:\n        $ref: '#/components/schemas/editTable'     \n")),(0,r.kt)("p",null,"The editTable schema defines the properties of the request body when creating a new task:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"editTable:\n  type: object\n  properties:\n    short_description:\n      x-ibm-label: Short Description\n      type: string\n      description: 'Short description of the record'\n    description:\n      x-ibm-label: Description\n      x-ibm-multiline: true\n      type: string\n      description: 'Detailed description of the record'\n    urgency:\n      x-ibm-label: Urgency\n      type: integer\n      description: '3 - Low, 2 - Medium, 1 - High'\n      enum:\n        - 3\n        - 2\n        - 1\n")),(0,r.kt)("h3",{id:"responses"},"Responses"),(0,r.kt)("p",null,"The responses from ServiceNow reference a schema to give only the wanted information. See ",(0,r.kt)("a",{parentName:"p",href:"outputs"},"Sample Outputs")," for more."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"responses:\n  '201':\n    description: Task created\n    content:\n      application/json:\n        schema:\n          $ref: '#/components/schemas/getthisTable'\n")),(0,r.kt)("h4",{id:"response-schema"},"Response Schema"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"outputs"},"Sample Outputs")," for other example output schemas used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"getthisTable:\n#Use when getting a single table such as Tasks and Incidents from a composite (sysID required input) skill\n  type: object\n  properties:\n    result:\n      x-ibm-label: Results\n      type: object\n      properties:\n          sys_id:\n            $ref: '#/components/schemas/sysID'\n          opened_at:\n            type: string\n          assignment_group:\n            type: string\n          assigned_to:\n            type: string\n          urgency:\n            type: string\n          opened_by:\n            type: string\n          state:\n            type: string\n          description:\n            type: string\n          short_description:\n            type: string\n          number:\n            type: string\n")),(0,r.kt)("h3",{id:"composite-skills"},"Composite Skills"),(0,r.kt)("p",null,"These skills need to be composite because a sysID parameter is required in the path (see {sys_ID}). To do this we use the Retrieve all Tasks skill first in the skill flow. When the user selects a task from the table, the sysID is captured as an output, then used as an input for the composite skill. This way, the user never has to worry about finding the ServiceNow sysID. Below are two composite Skills."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"/api/now/table/sc_task/{sys_id}?sysparm_display_value=true&sysparm_exclude_reference_link=true:\n  get:\n    summary: JC - Retrieve a specific Task in ServiceNow (Composite only)\n    description: Composite Skill - Retrieve a Task record in ServiceNow\n    operationId: retrievethisTask\n    parameters:\n      - name: sys_id\n        x-ibm-label: ServiceNow SysID (hidden)\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/sysID'\n    responses:\n      '200':\n        description: ok\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getthisTable'    \n  put:\n    summary: JC - Modify a specific Task in ServiceNow (Composite only)\n    description: Composite Skill - Modify a specific Task in ServiceNow\n    operationId: modifythisTask\n    parameters:\n      - name: sys_id\n        x-ibm-label: ServiceNow SysID (hidden)\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/sysID'\n    requestBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/editTable'          \n    responses:\n      '200':\n        description: Record updated\n        content:\n          application/json: \n            schema:\n              $ref: '#/components/schemas/getthisTable'\n")),(0,r.kt)("h3",{id:"schcema-components"},"Schcema Components"),(0,r.kt)("p",null,"In the components sections there are required schemas to apply properties or define the output of the response from ServiceNow"),(0,r.kt)("h4",{id:"sysid"},"sysID"),(0,r.kt)("p",null,"'x-ibm-show: false' hides this parameter from the user. It is required so it can be part of the skill output to be used as a composite skill's input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"sysID: #sysID is a required output for composite skills, not shown to user in table\n  x-ibm-show: false\n  type: string\n")),(0,r.kt)("h4",{id:"getthistable"},"getthisTable"),(0,r.kt)("p",null,"Output schema for a single table output such as a single Task or Incident"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"getthisTable: #Use when getting a single table such as Tasks and Incidents from a composite (sysID required input) skill\n  type: object\n  properties:\n    result:\n      x-ibm-label: Results\n      type: object\n      properties:\n          sys_id:\n            $ref: '#/components/schemas/sysID'\n          opened_at:\n            type: string\n          assignment_group:\n            type: string\n          assigned_to:\n            type: string\n          urgency:\n            type: string\n          opened_by:\n            type: string\n          state:\n            type: string\n          description:\n            type: string\n          short_description:\n            type: string\n          number:\n            type: string\n")),(0,r.kt)("h4",{id:"getsinglekb"},"getsingleKB"),(0,r.kt)("p",null,"Output schema for a single table output for a KB"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"There is little difference in the output between an Incident table and a Task table so they use the same schema. KB's are different tables entirely and require their own outpit schema")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"getsingleKB:\n      type: object\n      properties:\n        result:\n          x-ibm-label: Results\n          type: object\n          properties:\n              sys_id:\n                $ref: '#/components/schemas/sysID'\n              last_updated_on:\n                type: string\n              content:\n                type: string\n              author:\n                type: string\n              short_description:\n                type: string\n              number:\n                type: string\n")),(0,r.kt)("h4",{id:"getkbs"},"getKBs"),(0,r.kt)("p",null,"Output schema for a table of KBs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"getKBs:\n      type: object\n      properties:\n        result:\n          x-ibm-label: Knowledge Articles\n          type: array\n          items:\n            type: object\n            properties:\n              sys_id:\n                $ref: '#/components/schemas/sysID'\n              last_updated_on:\n                type: string\n              content:\n                type: string\n              author:\n                type: string\n              short_description:\n                type: string\n              number:\n                type: string\n")),(0,r.kt)("h4",{id:"gettable"},"getTable"),(0,r.kt)("p",null,"Output schema for a table of Tasks or incidents"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"getTable:     #Use for multiple table results (skills like Get all Tasks and Get all Incidents)\n      type: object\n      properties:\n        result:\n          x-ibm-label: Results\n          type: array\n          items:\n            type: object\n            properties:\n              sys_id:\n                $ref: '#/components/schemas/sysID'\n              opened_at:\n                type: string\n              assignment_group:\n                type: string\n              assigned_to:\n                type: string\n              urgency:\n                type: string\n              opened_by:\n                  type: string\n              state:\n                type: string\n              description:\n                type: string\n              short_description:\n                type: string\n              number:\n                type: string\n")),(0,r.kt)("h4",{id:"edittable"},"editTable"),(0,r.kt)("p",null,"Schema to define the content when editing a Task or Incident"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"editKB:\n  type: object\n    properties:\n      short_description:\n        x-ibm-label: Short Description\n        type: string\n        description: 'Short description of the record'\n")))}m.isMDXComponent=!0}}]);